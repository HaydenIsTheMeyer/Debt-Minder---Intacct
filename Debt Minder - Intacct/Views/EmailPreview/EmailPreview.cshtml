@model EmailPreviewModel

@{
    ViewData["Title"] = "Email Preview";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <!-- Tailwind CSS CDN for styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- DOMPurify for sanitizing HTML -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/dompurify/3.0.6/purify.min.js"></script>
    <!-- jQuery with CDN fallback -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script>
        // Fallback to CDN if local jQuery fails
        window.jQuery || document.write('<script src="https://code.jquery.com/jquery-3.6.0.min.js"><\/script>');
    </script>
    <!-- ASP.NET Core Validation Scripts -->
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <style>
        #editor {
            min-height: 300px;
            padding: 8px;
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            outline: none;
            overflow-y: auto;
        }

        #preview {
            overflow-wrap: break-word;
        }

        .toolbar button {
            padding: 4px 8px;
            margin-right: 4px;
            background-color: #e5e7eb;
            border: 1px solid #d1d5db;
            border-radius: 0.25rem;
        }

            .toolbar button:hover {
                background-color: #d1d5db;
            }
    </style>

    <script>
        // Debounce function to limit AJAX calls
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        document.addEventListener('DOMContentLoaded', function () {
            if (!window.jQuery) {
                console.error('jQuery is not loaded. Please check the script source.');
                document.getElementById('preview').innerHTML = '<p>Error: jQuery not loaded</p>';
                return;
            }

            const editor = document.getElementById('editor');
            const hiddenBody = document.getElementById('Body');
            const preview = document.getElementById('preview');
            const subjectInput = document.getElementById('Subject');
            const subjectPreview = document.getElementById('subjectPreview');

            // Update preview via AJAX
            const updatePreview = debounce(function (content) {
                $.ajax({
                    url: '@Url.Action("GenerateEmailHtml", "EmailPreview")',
                    type: 'POST',
                    data: { content: content },
                    success: function (response) {
                        if (response.html) {
                            const sanitizedContent = DOMPurify.sanitize(response.html);
                            preview.innerHTML = sanitizedContent || '<p>Start typing to see preview...</p>';
                        } else {
                            preview.innerHTML = '<p>Error generating preview</p>';
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX error:', error);
                        preview.innerHTML = '<p>Error connecting to server</p>';
                    }
                });
            }, 500);

            // Update preview and hidden input on editor change
            editor.addEventListener('input', function () {
                const content = editor.innerHTML;
                hiddenBody.value = content;
                updatePreview(content);
            });

            // Update subject preview
            subjectInput.addEventListener('input', function () {
                subjectPreview.innerText = this.value || 'Subject Preview';
            });

            // Formatting buttons
            document.querySelectorAll('.toolbar button').forEach(button => {
                button.addEventListener('click', function () {
                    const command = this.dataset.command;
                    document.execCommand(command, false, null);
                    editor.focus();
                    updatePreview(editor.innerHTML);
                });
            });

            // Client-side validation
            document.getElementById('emailForm').addEventListener('submit', function (event) {
                const subject = subjectInput.value.trim();
                const body = editor.innerHTML.trim();
                if (!subject || !body) {
                    event.preventDefault();
                    alert('Please fill in both the subject and body fields.');
                }
            });
        });
    </script>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto p-6">
        <h1 class="text-2xl font-bold mb-6">Email Preview</h1>

        <form id="emailForm" asp-action="SaveEmail" asp-controller="EmailPreview" method="post" class="flex flex-col lg:flex-row gap-6">
            <!-- Editor Panel -->
            <div class="flex-1 flex flex-col gap-4">
                <div>
                    <label for="Subject" class="block text-sm font-medium text-gray-700">Subject</label>
                    <input type="text" id="Subject" name="Subject" asp-for="Subject" class="mt-1 block w-full p-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" placeholder="Enter email subject" aria-required="true" maxlength="255" required />
                    <span asp-validation-for="Subject" class="text-red-600 text-sm"></span>
                </div>

                <div>
                    <label for="editor" class="block text-sm font-medium text-gray-700">Body</label>
                    <div class="toolbar mb-2">
                        <button type="button" data-command="bold" title="Bold">B</button>
                        <button type="button" data-command="italic" title="Italic">I</button>
                        <button type="button" data-command="underline" title="Underline">U</button>
                        <button type="button" data-command="insertUnorderedList" title="Bullet List">•</button>
                        <button type="button" data-command="insertOrderedList" title="Numbered List">1.</button>
                    </div>
                    <div id="editor" contenteditable="true" class="mt-1 block w-full p-2 bg-white rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" aria-required="true">@Model.Body</div>
                    <input type="hidden" id="Body" name="Body" asp-for="Body" />
                    <span asp-validation-for="Body" class="text-red-600 text-sm"></span>
                </div>

                <button type="submit" class="w-full lg:w-auto px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500">Save and Proceed</button>
            </div>

            <!-- Preview Panel -->
            <div class="flex-1 bg-white p-6 border border-gray-200 rounded-md shadow-sm max-h-[80vh] overflow-auto">
                <h2 class="text-lg font-semibold mb-4">Preview</h2>
                <h3 id="subjectPreview" class="text-gray-800 font-medium mb-2">Subject Preview</h3>
                <hr class="my-2" />
                <div id="preview" class="text-gray-600">
                    <p>Start typing to see preview...</p>
                </div>
            </div>
        </form>
    </div>
</body>
</html>